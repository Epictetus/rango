=== Rango 0.0.2 MVC Princess ===
Erubis: caching, Escape
MEDIA_PREFIX, fix rango/static middleware, it seems to be broken
cookies[:foo] instead of set_cookie
Erubis (@vars, local variables, concat)
GH gem building
see rack-router
utf-8 in flash messages
pupu integration
Rango generators:
Exceptions controller / more generic solution for other strategies
logger#debug vs logger#info; less logger debug messages
rango: dumpovani instancnich promennych pri exception
API doc (also for classes)
router include, with(page: 1) do ... end, defer_to
match("/admin/objednavky/nove(/:page)")
escape everything in templates by default
specs
full pupu integration
user app tasks
rubyforge tasks
rack::reloader
router: unnamed args
404 & 500 errors
pupu:foo instead of pupu:tasks:foo
raise Error404.new unless @post: predavat params. Kernel#caller maybe? or not_found method of controller?
Error500 in browser just like in TM (txmt://, filter backtraces, show code etc) ... the code should be highlighted if uv is installed
raise NotFound unless @post => route to Exceptions or what?
404, 500 HTML output (with backtraces/routes, at least some CSS)
files uploading
generic views
moznost zapisovat nekryptovane cookies (kvuli cteni JSem)
=== Documentation ===
in README should be just basic informations, others should be in doc/rango or so
yardoc:
  - syntax off for shell commands
  - examples: not use <pre>, do not escape characters here, enable usage of comments, options keys
  - what is just optional argument
  - array of string etc

=== Rango 0.0.3  ===
STDLIB erb support maybe
rango-project.org site
example apps
Windows compatibility (no cp -R etc, path)
render strategies:
  - rails-like autorendering
  - merb-like
  - django-like explicit
sync documentation with api.rango-project.org, route HEAD docs to /
named routes
match(domain: "somecooldomain.com", subdomain: /regexp/)
exceptions notifications (=> email)
logger: settings (where to log - file, STDERR, format)
m17n
bundling: Nejlepsi bude kdyz proste pujde z toho repa udelat gem (thor package:gem nebo tak neco) a nainstaluje se to jako gem. Kdybysme meli to, co rails, tak nemuzeme podporovat soucasne i gemy a kdyby to, co merb, tak musime vzdycky udelat balicek rucne, coz je opruz
forms, modelforms
contrib/syndication
autorender: metoda ktera si najde template a vyrenderuje ji
render vs. display + "provides" API: has display sense for Rango?
(logger) general, safe solution for filtering backtraces (maybe settings: filter_backtraces: true/false, filter_backtraces_pattern: regexp)
parse backtrace (another color for path, another for line and method)

=== Rango 0.0.4 ===
diff configuration (global vs. mine, anyone else vs. mine)
possibility how to run without rubygems (check setup.rb based installation)
cache & cache support in static middleware
router method default can take blok
router resources? if so, then with translation
rescue SkipRoute
plugins can add new stubs (for controller etc)
pupu generator
update task for all the thor classes (thor pupu:selfupdate)
Testing:
  - thor stats for projects
  - spec will be app-level, but what about features? project level?
  - spec: should have_xpath, have_selector, match etc
  - thor spec:features
  - thor spec:models
  - thor spec:coverage (rcov)
  - autotest, autospec
  - factories
  - cucumber adapter
  - rspec adapter
  - rcov (project & rango)
Rack:
  - registering mime types
  - escape @ in emails
  - evil middleware
  - middleware na odstraneni whitespace z html etc
  - js/css minify
  - etag, last-modified (rack or rack-contrib)

=== Rango 0.0.5 ===
autoadmin, comments, flatpages
fireruby logger adapter
http://debu.gs/live-console
profiling, benchmarking (bm against merb, rails, django, sinatra, ramaze)
