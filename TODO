GH gem building
see rack router
utf-8 in flash messages
pupu integration
syncovat dokumentaci se serverem, vytvaret index (nebo spis symlink z HEAD)

=== Rango 0.0.2 MVC Princess ===
ERB, Erubis
Rango.import zasadne s priponou, jinak problemy s eisdir etc
API doc (also for classes)
logger#debug vs logger#info; less logger debug messages
cookies[:foo] instead of set_cookie
named routes
router include, with(page: 1) do ... end
exceptions controller
app generators
example apps
forms, modelforms
Windows compatibility (no cp -R etc)

controller functionality from other router strategies, not just form controller (e.g. template rendering etc)

rango: template strategies: napr. v jakem namespace vyhodnocovat, zda predavat kontexty jako v djangu ...
Nejlepsi bude kdyz proste pujde z toho repa udelat gem (thor package:gem nebo tak neco) a nainstaluje se to jako gem. Kdybysme meli to, co rails, tak nemuzeme podporovat soucasne i gemy a kdyby to, co merb, tak musime vzdycky udelat balicek rucne, coz je opruz

rango: dumpovani instancnich promennych pri exception
Watch: django, ramaze, sinatra, halcyon, merb, rack, rack-contrib

=== Documentation ===
Doc for classes, not just for methods
in README should be just basic informations, others should be in doc/rango or so
yardoc:
  - syntax off for shell commands
  - examples: not use <pre>, do not escape characters here, enable usage of comments, options keys
  - what is just optional argument
  - array of string etc

=== Error handling and logging ===
raise Error404.new unless @post: predavat params. Kernel#caller maybe? or not_found method of controller?
Error500 in browser just like in TM (txmt://, filter backtraces, show code etc) ... the code should be highlighted if uv is installed
raise NotFound unless @post => route to Exceptions or what?
404, 500 HTML output (with backtraces/routes, at least some CSS)

=== Dependencies ===
extlib, look for rack middlewares

=== Rango tests ===
generate all kinds of apps and test if server will start properly

=== Router ===
unnamed args
404 & 500 errors
match(domain: "somecooldomain.com", subdomain: /regexp/)
implement include and defer_to
router method default can take blok
match("/admin/objednavky/nove(/:page)")
router resources? if so, then with translation
rescue SkipRoute
named routes

=== Templates ===
escape everything

=== Rack ===
files uploading
registering mime types
escape @ in emails
etag, last-modified (rack or rack-contrib)
evil middleware
middleware na odstraneni whitespace z html etc
js/css minify
rack::reloader

=== MVC ===
"provides" API for handling mime-types as in merb?
render & display: automatically find template
flash messages
views helpers (error_messages_for etc)

=== Bundling ===
possibility how to run without rubygems (microgems?)
pupu

=== Adapters ===
DataMapper
Erb, Erubis, Markaby
Thor 1.9 compatible, pupu:foo instead of pupu:tasks:foo

=== Configuration ===
logger: settings (where to log - file, STDERR, format)
diff configuration (global vs. mine, anyone else vs. mine)

=== Others ===
(logger) general, safe solution for filtering backtraces (maybe settings: filter_backtraces: true/false, filter_backtraces_pattern: regexp)
parse backtrace (another color for path, another for line and method)
Rango.template("404.html")
init.rb in app: Blog.logger etc, not just Project.logger
maybe relative paths for project files will be better
m17n

=== Tasks ===
update task for all the thor classes (thor pupu:selfupdate)

=== Project testing ===
thor stats for projects
spec will be app-level, but what about features? project level?
spec: should have_xpath, have_selector, match etc
thor spec:features
thor spec:models
thor spec:coverage (rcov)
autotest, autospec
factories
cucumber adapter
rspec adapter
rcov (project & rango)

=== Rango 0.7 ===
forms? something like Django forms?
etag, last modified middleware (rack-contrib)
cache
mailer (merb messenger-like notifications) ... pony
auth
generic views
contrib:
  - syndication
  - flatpages

=== Plugins ===
plugins can add new stubs (for controller etc)
pupu generator

=== Benchmarking & Logging & Live debuging ===
fireruby logger adapter
http://debu.gs/live-console
profiling, benchmarking (bm against merb, rails, django, sinatra, ramaze)

=== Contrib ===
autoadmin
comments
exceptions notifications (=> email)
